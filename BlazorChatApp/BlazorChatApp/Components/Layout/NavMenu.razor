@implements IDisposable

@inject NavigationManager NavigationManager

<HxSidebar>
    <HeaderTemplate>
        <HxSidebarBrand BrandName="Chat Space" BrandNameShort="CS" />
    </HeaderTemplate>

    <ItemsTemplate>
        <HxSidebarItem Text="Home" Href="" Icon="BootstrapIcon.House" TooltipText="Home page" />
        <HxSidebarItem Text="Chat" Href="Chat/Home" Icon="BootstrapIcon.Chat" TooltipText="Chat home page" />
        <AuthorizeView>
            <Authorized>
                <HxSidebarItem Text="Account" Href="Account/Manage" Icon="BootstrapIcon.Shield" TooltipText="Account management page"/>
                 <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        Logout
                    </button>
                 </form>
            </Authorized>
            <NotAuthorized>
                <HxSidebarItem Text="Register" Href="Account/Register" Icon="BootstrapIcon.Pencil" TooltipText="Registration page" />
                <HxSidebarItem Text="Login" Href="Account/Login" Icon="BootstrapIcon.Lock" TooltipText="Login page" />
            </NotAuthorized>
        </AuthorizeView>
    </ItemsTemplate>
</HxSidebar>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

